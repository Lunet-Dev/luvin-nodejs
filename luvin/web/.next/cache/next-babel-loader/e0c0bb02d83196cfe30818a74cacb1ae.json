{"ast":null,"code":"import { put, takeLatest, all, call } from \"redux-saga/effects\";\nimport { GET_VIDEOS } from \"../constants/videos\";\nimport { getVideosSuccess, getVideosError } from \"../actions/videos\";\nimport Request from \"../utils/request\";\nexport function* handleGetVideos(action) {\n  const url = `/post?limit=${action.limit}&page=${action.page}&type=video`;\n\n  try {\n    const response = yield call(Request, url);\n    yield put(getVideosSuccess(response.data.total, response.data.posts));\n  } catch (error) {\n    yield put(getVideosError(error.message));\n  }\n}\nexport default function* rootSaga() {\n  yield all([yield takeLatest(GET_VIDEOS, handleGetVideos)]);\n}","map":null,"metadata":{},"sourceType":"module"}