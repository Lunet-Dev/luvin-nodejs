{"ast":null,"code":"import { put, takeLatest, all, call } from \"redux-saga/effects\";\nimport { GET_NEWS } from \"../constants/news\";\nimport { getNewsSuccess, getNewsError } from \"../actions/news\";\nimport Request from \"../utils/request\";\nexport function* handleGetNews(action) {\n  const url = `/post?limit=${action.limit}&page=${action.page}&type=article`;\n\n  try {\n    const response = yield call(Request, url);\n    yield put(getNewsSuccess(response.data.total, response.data.post));\n  } catch (error) {\n    yield put(getNewsError(error.message));\n  }\n}\nexport default function* rootSaga() {\n  yield all([yield takeLatest(GET_NEWS, handleGetNews)]);\n}","map":null,"metadata":{},"sourceType":"module"}