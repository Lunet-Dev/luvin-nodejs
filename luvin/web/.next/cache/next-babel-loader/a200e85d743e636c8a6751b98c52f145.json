{"ast":null,"code":"import { put, takeLatest, all, call } from \"redux-saga/effects\";\nimport { SEARCH } from \"../constants/search\";\nimport { searchSuccess, searchError } from \"../actions/search\";\nimport Request from \"../utils/request\";\nexport function* handleSearch(action) {\n  const url = `/product?limit=${action.limit}&page=${action.page}&name=${action.name}`;\n\n  try {\n    const response = yield call(Request, url);\n    yield put(searchSuccess(response.data.total, response.data.products));\n  } catch (error) {\n    yield put(searchError(error.message));\n  }\n}\nexport default function* rootSaga() {\n  yield all([yield takeLatest(SEARCH, handleSearch)]);\n}","map":null,"metadata":{},"sourceType":"module"}