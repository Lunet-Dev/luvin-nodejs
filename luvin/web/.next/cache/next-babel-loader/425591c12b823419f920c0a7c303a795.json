{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport logger from \"redux-logger\";\nimport createReducer from \"./reducers\";\nimport rootSaga from \"./sagas\";\n\nvar bindMiddleware = function bindMiddleware(middleware) {\n  if (false) {\n    var _require = require(\"redux-devtools-extension\"),\n        composeWithDevTools = _require.composeWithDevTools;\n\n    return composeWithDevTools(applyMiddleware.apply(void 0, _toConsumableArray(middleware)));\n  }\n\n  return applyMiddleware.apply(void 0, _toConsumableArray(middleware));\n};\n\nfunction configureStore() {\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var sagaMiddleware = createSagaMiddleware();\n  var middleware = [sagaMiddleware];\n\n  if (false && true) {\n    middleware.push(logger);\n  }\n\n  var store = createStore(createReducer(), initialState, bindMiddleware(middleware));\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n}\n\nexport default configureStore;","map":null,"metadata":{},"sourceType":"module"}