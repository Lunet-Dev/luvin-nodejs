{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport cookies from \"next-cookies\";\nconst TOKEN_COOKIE_KEY = \"_tl\";\n/**\r\n * HOC láº¥y accessToken\r\n * @param {*} WrappedComponent\r\n */\n\nconst withAuthSync = WrappedComponent => class extends Component {\n  static async getInitialProps(props) {\n    const allCookies = cookies(props.ctx);\n    const accessToken = allCookies[TOKEN_COOKIE_KEY];\n    props.ctx.accessToken = accessToken; // eslint-disable-line\n\n    const componentProps = WrappedComponent.getInitialProps && (await WrappedComponent.getInitialProps(props));\n    return _objectSpread(_objectSpread({}, componentProps), {}, {\n      accessToken\n    });\n  }\n\n  render() {\n    return __jsx(WrappedComponent, this.props);\n  }\n\n};\n\nexport default withAuthSync;","map":null,"metadata":{},"sourceType":"module"}