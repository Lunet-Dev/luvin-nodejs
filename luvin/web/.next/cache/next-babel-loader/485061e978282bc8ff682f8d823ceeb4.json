{"ast":null,"code":"import { put, takeLatest, all, call } from \"redux-saga/effects\";\nimport isString from \"lodash/isString\";\nimport { CREATE_ORDER, GET_ORDER_HISTORY, GET_ORDER_DETAIL, REDEEM_VOUCHER } from \"../constants/order\";\nimport { createOrderSuccess, createOrderError, getOrderHistorySuccess, getOrderHistoryError, getOrderDetailSuccess, getOrderDetailError, redeemVoucherSuccess, redeemVoucherError } from \"../actions/order\";\nimport Request from \"../utils/request\";\nexport function* handleCreateOrder(action) {\n  const url = \"/order\";\n\n  try {\n    const response = yield call(Request, url, {\n      method: \"POST\",\n      body: JSON.stringify(action.orderInfo)\n    });\n\n    if (isString(response.data)) {\n      window.location.replace(response.data);\n      return;\n    }\n\n    window.location.href = `/tai-khoan/view-order/${response.data._id}`;\n    yield put(createOrderSuccess(response.data));\n  } catch (error) {\n    yield put(createOrderError(error.message));\n  }\n}\nexport function* handleGetOrdersHistory(action) {\n  const url = \"/order/history?limit=100&page=1\";\n\n  try {\n    const response = yield call(Request, url);\n    yield put(getOrderHistorySuccess(response.data));\n  } catch (error) {\n    yield put(getOrderHistoryError(error.message));\n  }\n}\nexport function* handleGetOrderDetail(action) {\n  const url = `/order/${action.orderId}`;\n\n  try {\n    const response = yield call(Request, url);\n    yield put(getOrderDetailSuccess(response.data));\n  } catch (error) {\n    yield put(getOrderDetailError(error.message));\n  }\n}\nexport function* handleRedeemVoucher(action) {\n  const url = `/voucher/redeem`;\n\n  try {\n    const response = yield call(Request, url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        code: action.code\n      })\n    });\n    yield put(redeemVoucherSuccess(response.data));\n  } catch (error) {\n    yield put(redeemVoucherError(error.message));\n  }\n}\nexport default function* rootSaga() {\n  yield all([yield takeLatest(CREATE_ORDER, handleCreateOrder), yield takeLatest(GET_ORDER_HISTORY, handleGetOrdersHistory), yield takeLatest(GET_ORDER_DETAIL, handleGetOrderDetail), yield takeLatest(REDEEM_VOUCHER, handleRedeemVoucher)]);\n}","map":null,"metadata":{},"sourceType":"module"}