{"ast":null,"code":"import { put, takeLatest, all, call } from \"redux-saga/effects\";\nimport { GET_PRODUCTS_SALE } from \"../constants/sales\";\nimport { getProductsSaleSuccess, getProductsSaleError } from \"../actions/sales\";\nimport Request from \"../utils/request\";\nexport function* handleGetProductsSale(action) {\n  const url = `/product/sale?limit=${action.limit}&page=${action.page}`;\n\n  try {\n    const response = yield call(Request, url);\n    yield put(getProductsSaleSuccess(response.data.total, response.data.products));\n  } catch (error) {\n    yield put(getProductsSaleError(error.message));\n  }\n}\nexport default function* rootSaga() {\n  yield all([yield takeLatest(GET_PRODUCTS_SALE, handleGetProductsSale)]);\n}","map":null,"metadata":{},"sourceType":"module"}