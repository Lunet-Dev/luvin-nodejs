{"ast":null,"code":"import { put, takeLatest, all, call } from \"redux-saga/effects\";\nimport { GET_PAGE } from \"../constants/page\";\nimport { getPageSuccess, getPageError } from \"../actions/page\";\nimport Request from \"../utils/request\";\nexport function* handleGetPage(action) {\n  const url = `/page/${action.pageType}`;\n\n  try {\n    const response = yield call(Request, url);\n    yield put(getPageSuccess((response.data || {}).content || \"\"));\n  } catch (error) {\n    yield put(getPageError(error.message));\n  }\n}\nexport default function* rootSaga() {\n  yield all([yield takeLatest(GET_PAGE, handleGetPage)]);\n}","map":null,"metadata":{},"sourceType":"module"}