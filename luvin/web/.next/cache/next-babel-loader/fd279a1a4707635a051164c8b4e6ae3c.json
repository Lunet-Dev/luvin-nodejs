{"ast":null,"code":"import { put, takeLatest, all, call } from \"redux-saga/effects\";\nimport { GET_FAQS } from \"../constants/faqs\";\nimport { getFaqs, getFaqsError } from \"../actions/faqs\";\nimport Request from \"../utils/request\";\nexport function* handleGetFaqs(action) {\n  const url = `/post?limit=${action.limit}&page=${action.page}&type=faq`;\n\n  try {\n    const response = yield call(Request, url);\n    yield put(getFaqs(response.data.total, response.data.posts));\n  } catch (error) {\n    yield put(getFaqsError(error.message));\n  }\n}\nexport default function* rootSaga() {\n  yield all([yield takeLatest(GET_FAQS, handleGetFaqs)]);\n}","map":null,"metadata":{},"sourceType":"module"}