{"ast":null,"code":"import { put, takeLatest, all, call } from \"redux-saga/effects\";\nimport { GET_FEEDBACK, SEND_FEEDBACK } from \"../constants/feedback\";\nimport { getFeedbackSuccess, getFeedbackError, sendFeedbackSuccess, sendFeedbackError } from \"../actions/feedback\";\nimport Request from \"../utils/request\";\nexport function* handleGetFeedback(action) {\n  const url = \"/review\";\n\n  try {\n    const response = yield call(Request, url);\n    yield put(getFeedbackSuccess(response.data));\n  } catch (error) {\n    yield put(getFeedbackError(error.message));\n  }\n}\nexport function* handleSendFeedback(action) {\n  const url = \"/review\";\n\n  try {\n    console.log(\"action.feedbackData\", action.feedbackData);\n    const response = yield call(Request, url, {\n      method: \"POST\",\n      body: JSON.stringify(action.feedbackData)\n    });\n    yield put(sendFeedbackSuccess(response.data));\n  } catch (error) {\n    yield put(sendFeedbackError(error.message));\n  }\n}\nexport default function* rootSaga() {\n  yield all([yield takeLatest(GET_FEEDBACK, handleGetFeedback), yield takeLatest(SEND_FEEDBACK, handleSendFeedback)]);\n}","map":null,"metadata":{},"sourceType":"module"}