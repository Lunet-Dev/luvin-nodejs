{"ast":null,"code":"import { applyMiddleware, createStore } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport logger from \"redux-logger\";\nimport createReducer from \"./reducers\";\nimport rootSaga from \"./sagas\";\n\nconst bindMiddleware = middleware => {\n  if (false) {\n    const {\n      composeWithDevTools\n    } = require(\"redux-devtools-extension\");\n\n    return composeWithDevTools(applyMiddleware(...middleware));\n  }\n\n  return applyMiddleware(...middleware);\n};\n\nfunction configureStore(initialState = {}) {\n  const sagaMiddleware = createSagaMiddleware();\n  const middleware = [sagaMiddleware];\n\n  if (false && false) {\n    middleware.push(logger);\n  }\n\n  const store = createStore(createReducer(), initialState, bindMiddleware(middleware));\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n}\n\nexport default configureStore;","map":null,"metadata":{},"sourceType":"module"}