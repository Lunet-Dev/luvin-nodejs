{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(handleLogin),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(handleRegister),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(handleGetUserInfo),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(handleLogout),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { put, takeLatest, all, call } from \"redux-saga/effects\";\nimport { LOGIN, REGISTER, GET_USER_INFO, LOGOUT } from \"../constants/auth\";\nimport { loginSuccess, loginError, registerSuccess, registerError, getUserInfoSuccess } from \"../actions/auth\";\nimport Request from \"../utils/request\";\nimport Authendication from \"../utils/authendication\";\nexport function handleLogin(action) {\n  var url, response;\n  return _regeneratorRuntime.wrap(function handleLogin$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          url = \"/auth/login\";\n          _context.prev = 1;\n          _context.next = 4;\n          return call(Request, url, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              phone: action.phone,\n              password: action.password\n            })\n          });\n\n        case 4:\n          response = _context.sent;\n          Authendication.saveAuthToCookie(response.data.token);\n          _context.next = 8;\n          return put(loginSuccess(response.data.user));\n\n        case 8:\n          _context.next = 14;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](1);\n          _context.next = 14;\n          return put(loginError(_context.t0.message));\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 10]]);\n}\nexport function handleRegister(action) {\n  var url, response;\n  return _regeneratorRuntime.wrap(function handleRegister$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          url = \"/auth/register\";\n          _context2.prev = 1;\n          _context2.next = 4;\n          return call(Request, url, {\n            method: \"POST\",\n            body: JSON.stringify(action.registerInfo)\n          });\n\n        case 4:\n          response = _context2.sent;\n          Authendication.saveAuthToCookie(response.data.token);\n          _context2.next = 8;\n          return put(registerSuccess(response.data.user));\n\n        case 8:\n          _context2.next = 14;\n          break;\n\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](1);\n          _context2.next = 14;\n          return put(registerError(_context2.t0.message));\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[1, 10]]);\n}\nexport function handleGetUserInfo(action) {\n  var url, response;\n  return _regeneratorRuntime.wrap(function handleGetUserInfo$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          url = \"/auth/me\";\n          _context3.prev = 1;\n          _context3.next = 4;\n          return call(Request, url, {}, action.accessToken);\n\n        case 4:\n          response = _context3.sent;\n          _context3.next = 7;\n          return put(getUserInfoSuccess(response.data));\n\n        case 7:\n          _context3.next = 11;\n          break;\n\n        case 9:\n          _context3.prev = 9;\n          _context3.t0 = _context3[\"catch\"](1);\n\n        case 11:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[1, 9]]);\n}\nexport function handleLogout(action) {\n  return _regeneratorRuntime.wrap(function handleLogout$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          Authendication.logout();\n\n        case 1:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.t0 = all;\n          _context5.next = 3;\n          return takeLatest(LOGIN, handleLogin);\n\n        case 3:\n          _context5.t1 = _context5.sent;\n          _context5.next = 6;\n          return takeLatest(REGISTER, handleRegister);\n\n        case 6:\n          _context5.t2 = _context5.sent;\n          _context5.next = 9;\n          return takeLatest(GET_USER_INFO, handleGetUserInfo);\n\n        case 9:\n          _context5.t3 = _context5.sent;\n          _context5.next = 12;\n          return takeLatest(LOGOUT, handleLogout);\n\n        case 12:\n          _context5.t4 = _context5.sent;\n          _context5.t5 = [_context5.t1, _context5.t2, _context5.t3, _context5.t4];\n          _context5.next = 16;\n          return (0, _context5.t0)(_context5.t5);\n\n        case 16:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}","map":null,"metadata":{},"sourceType":"module"}