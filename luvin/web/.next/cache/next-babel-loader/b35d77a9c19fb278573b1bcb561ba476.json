{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as TYPES from \"../constants/auth\";\nconst initialState = {\n  userInfo: {},\n  login: {\n    phone: \"\",\n    password: \"\",\n    loading: false,\n    fetched: false,\n    errorMessage: undefined\n  },\n  register: {\n    phone: \"\",\n    password: \"\",\n    loading: false,\n    fetched: false,\n    errorMessage: undefined\n  },\n  updateUserInfo: {\n    loading: false,\n    fetched: false,\n    errorMessage: undefined,\n    success: false\n  },\n  updatePassword: {\n    loading: false,\n    fetched: false,\n    success: false,\n    errorMessage: undefined\n  }\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case TYPES.GET_USER_INFO_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        userInfo: action.userInfo\n      });\n\n    case TYPES.CHANGE_LOGIN_INFO:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        login: _objectSpread(_objectSpread({}, state.login), {}, {\n          [action.prop]: action.value\n        })\n      });\n\n    case TYPES.CHANGE_REGISTER_INFO:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        register: _objectSpread(_objectSpread({}, state.login), {}, {\n          [action.prop]: action.value\n        })\n      });\n\n    case TYPES.LOGIN:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        login: _objectSpread(_objectSpread({}, state.login), {}, {\n          loading: true,\n          fetched: false,\n          errorMessage: undefined\n        })\n      });\n\n    case TYPES.LOGIN_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        login: _objectSpread(_objectSpread({}, state.login), {}, {\n          loading: false,\n          fetched: true,\n          errorMessage: undefined\n        }),\n        userInfo: action.userInfo\n      });\n\n    case TYPES.LOGIN_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        login: _objectSpread(_objectSpread({}, state.login), {}, {\n          loading: false,\n          fetched: true,\n          errorMessage: action.errorMessage\n        })\n      });\n\n    case TYPES.REGISTER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        register: _objectSpread(_objectSpread({}, state.register), {}, {\n          loading: true,\n          fetched: false,\n          errorMessage: undefined\n        })\n      });\n\n    case TYPES.REGISTER_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        register: _objectSpread(_objectSpread({}, state.register), {}, {\n          loading: false,\n          fetched: true,\n          errorMessage: undefined\n        }),\n        userInfo: action.userInfo\n      });\n\n    case TYPES.REGISTER_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        register: _objectSpread(_objectSpread({}, state.register), {}, {\n          loading: false,\n          fetched: true,\n          errorMessage: action.errorMessage\n        })\n      });\n\n    case TYPES.LOGOUT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        userInfo: {}\n      });\n\n    case TYPES.UPDATE_USER_INFO:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        updateUserInfo: _objectSpread(_objectSpread({}, state), {}, {\n          loading: true,\n          fetched: false,\n          errorMessage: undefined,\n          success: false\n        })\n      });\n\n    case TYPES.UPDATE_USER_INFO_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        userInfo: _objectSpread(_objectSpread({}, state.userInfo), action.userInfo),\n        updateUserInfo: _objectSpread(_objectSpread({}, state.updateUserInfo), {}, {\n          loading: false,\n          fetched: true,\n          success: true\n        })\n      });\n\n    case TYPES.UPDATE_USER_INFO_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        updateUserInfo: {\n          loading: false,\n          fetched: true,\n          errorMessage: action.errorMessage\n        }\n      });\n\n    case TYPES.UPDATE_PASSWORD:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        updatePassword: _objectSpread(_objectSpread({}, state.updatePassword), {}, {\n          loading: true,\n          success: false,\n          fetched: false,\n          errorMessage: undefined\n        })\n      });\n\n    case TYPES.UPDATE_PASSWORD_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        updatePassword: _objectSpread(_objectSpread({}, state.updatePassword), {}, {\n          loading: false,\n          fetched: true,\n          success: true\n        })\n      });\n\n    case TYPES.UPDATE_PASSWORD_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        updatePassword: _objectSpread(_objectSpread({}, state.updatePassword), {}, {\n          loading: false,\n          fetched: true,\n          success: false,\n          errorMessage: action.errorMessage\n        })\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","map":null,"metadata":{},"sourceType":"module"}