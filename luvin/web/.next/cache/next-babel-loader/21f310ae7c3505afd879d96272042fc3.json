{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all } from \"redux-saga/effects\";\nimport es6promise from \"es6-promise\";\nimport AuthSaga from \"./auth\";\nimport ConfigsSaga from \"./configs\";\nimport CategoriesSaga from \"./categories\";\nimport ProductsSaga from \"./products\";\nimport ProductSaga from \"./product\";\nimport OrderSaga from \"./order\";\nimport SalesSaga from \"./sales\";\nimport EventsSaga from \"./events\";\nimport EventSaga from \"./event\";\nimport NewsSaga from \"./news\";\nimport NewSaga from \"./new\";\nimport FaqsSaga from \"./faqs\";\nimport FaqSaga from \"./faq\";\nimport VideosSaga from \"./videos\";\nimport FeedbackSaga from \"./feedback\";\nes6promise.polyfill();\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return all([ConfigsSaga(), AuthSaga(), CategoriesSaga(), ProductsSaga(), ProductSaga(), OrderSaga(), SalesSaga(), EventsSaga(), EventSaga(), NewsSaga(), NewSaga(), FaqsSaga(), FaqSaga(), VideosSaga(), FeedbackSaga()]);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}","map":null,"metadata":{},"sourceType":"module"}