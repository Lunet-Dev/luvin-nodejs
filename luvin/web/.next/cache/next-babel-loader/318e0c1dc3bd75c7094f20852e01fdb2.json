{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport fetch from \"isomorphic-unfetch\";\nimport Authendication from \"./authendication\";\n\nasync function parseJSON(response) {\n  const data = await response.json();\n\n  if (response.status >= 400) {\n    const error = new Error(data.message);\n    throw error;\n  }\n\n  return data;\n}\n\nexport default function request(path, options = {}, accessToken) {\n  const url = `${process.env.NEXT_PUBLIC_API_ENDPOINT}${path}`;\n  return fetch(url, _objectSpread({\n    headers: {\n      authorization: accessToken || Authendication.getToken(),\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  }, options)) // .then(checkStatus)\n  .then(parseJSON);\n}","map":null,"metadata":{},"sourceType":"module"}