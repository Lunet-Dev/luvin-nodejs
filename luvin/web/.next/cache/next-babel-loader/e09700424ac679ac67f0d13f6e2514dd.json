{"ast":null,"code":"import { put, takeLatest, all, call } from \"redux-saga/effects\";\nimport { GET_PRODUCT } from \"../constants/product\";\nimport { getProductSuccess, getProductError } from \"../actions/product\";\nimport Request from \"../utils/request\";\nexport function* handleGetProduct(action) {\n  const url = `/product/${action.productSlug}`;\n\n  try {\n    const response = yield call(Request, url);\n    yield put(getProductSuccess(response.data));\n  } catch (error) {\n    yield put(getProductError(error.message));\n  }\n}\nexport default function* rootSaga() {\n  yield all([yield takeLatest(GET_PRODUCT, handleGetProduct)]);\n}","map":null,"metadata":{},"sourceType":"module"}